name: "Mirror images"

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  IMAGES: |
    node
    alpine

jobs:
  simulate-activity:
    name: "Simulate repo activity"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Simulate repository activity to keep schedule active
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit --amend --no-edit
          git push origin HEAD:main --force-with-lease || true

  prepare:
    name: "Prepare matrix"
    runs-on: ubuntu-latest
    outputs:
      matrix_json: ${{ steps.prepare-matrix.outputs.matrix_json }}

    steps:
      - name: Prepare matrix for mirror job
        id: prepare-matrix
        shell: bash
        run: |
          set -euo pipefail
          
          mapfile -t images < <(echo -e "${{ env.IMAGES }}")
          matrix_json='['
          for image in "${images[@]}"; do
              matrix_json+="{\"image\": \"$image\"},"
          done
          matrix_json="${matrix_json%,}"
          matrix_json+=']'
          
          delim="EOF$RANDOM"
          echo "matrix_json<<$DELIM" >> $GITHUB_OUTPUT
          echo "$matrix_json" >> $GITHUB_OUTPUT
          echo "$DELIM" >> $GITHUB_OUTPUT

  mirror:
    name: "Mirror images"
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      packages: write
    strategy:
      matrix:
        image: ${{ fromJSON(needs.prepare.outputs.matrix_json) }}
      fail-fast: false

    steps:
      - name: Log into GHCR with Skopeo
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
            skopeo login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Mirror image
        run: |
          set -euo pipefail
          
          src_image_name="${{ matrix.image }}"
          dst_image_name="${src_image_name//\//-}"
          dst_image_name="${dst_image_name//./}"
          dst_image_name="${dst_image_name}-mirror"
          
          if [[ "$src_image_name" != */* ]]; then
              src_image_name="library/$src_image_name"
          fi
          
          src_image="docker.io/$src_image_name"
          dst_image="ghcr.io/${{ github.repository_owner }}/$dst_image_name"
          
          echo "Will copy:"
          echo "  $src_image_name ($src_image)"
          echo "to:"
          echo "  $dst_image_name ($dst_image)"
          echo
          echo "::group::Copying $src_image â†’ $dst_image"
          skopeo copy "docker://$src_image" "docker://$dst_image"
          echo "::endgroup::"
